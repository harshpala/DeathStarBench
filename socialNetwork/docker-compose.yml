version: "3.9"
services:
  social-graph-service:
    image: deathstarbench/social-network-microservices:latest
    hostname: social-graph-service
    #    ports:
    #      - 10000:9090
    depends_on:
      jaeger-agent:
        condition: service_started
      social-graph-mongodb:
        condition: service_started
    restart: always
    entrypoint: SocialGraphService
    volumes:
      - ./config:/social-network-microservices/config
    networks:
      - dsbnet

  social-graph-mongodb:
    image: mongo:4.4.6
    hostname: social-graph-mongodb
    # ports:
    #   - 27018:27017
    restart: always
    networks:
      - dsbnet

  social-graph-redis:
    image: redis
    hostname: social-graph-redis
    # ports:
    #   - 6380:6379
    restart: always
    networks:
      - dsbnet

  home-timeline-redis:
    image: redis
    hostname: home-timeline-redis
    # ports:
    #   - 6381:6379
    restart: always
    networks:
      - dsbnet

  compose-post-service:
    image: deathstarbench/social-network-microservices:latest
    hostname: compose-post-service
    #    ports:
    #      - 10001:9090
    restart: always
    depends_on:
      jaeger-agent:
        condition: service_started
    entrypoint: ComposePostService
    volumes:
      - ./config:/social-network-microservices/config
    networks:
      - dsbnet

  post-storage-service:
    image: deathstarbench/social-network-microservices:latest
    hostname: post-storage-service
    ports:
      - 10002:9090
    restart: always
    depends_on:
      jaeger-agent:
        condition: service_started
      post-storage-mongodb:
        condition: service_started
    entrypoint: PostStorageService
    volumes:
      - ./config:/social-network-microservices/config
    networks:
      - dsbnet

  post-storage-memcached:
    image: memcached
    hostname: post-storage-memcached
    #    ports:
    #      - 11212:11211
    restart: always
    networks:
      - dsbnet

  post-storage-mongodb:
    image: mongo:4.4.6
    hostname: post-storage-mongodb
    #    ports:
    #      - 27019:27017
    restart: always
    networks:
      - dsbnet

  user-timeline-service:
    image: deathstarbench/social-network-microservices:latest
    hostname: user-timeline-service
    #    ports:
    #      - 10003:9090
    restart: always
    depends_on:
      jaeger-agent:
        condition: service_started
      user-timeline-mongodb:
        condition: service_started
    entrypoint: UserTimelineService
    volumes:
      - ./config:/social-network-microservices/config
    networks:
      - dsbnet

  user-timeline-redis:
    image: redis
    hostname: user-timeline-redis
    #    ports:
    #      - 6383:6379
    restart: always
    networks:
      - dsbnet

  user-timeline-mongodb:
    image: mongo:4.4.6
    hostname: user-timeline-mongodb
    #    ports:
    #      - 27020:27017
    restart: always
    networks:
      - dsbnet

  url-shorten-service:
    image: deathstarbench/social-network-microservices:latest
    hostname: url-shorten-service
    #    ports:
    #      - 10004:9090
    restart: always
    entrypoint: UrlShortenService
    depends_on:
      jaeger-agent:
        condition: service_started
      url-shorten-mongodb:
        condition: service_started
    volumes:
      - ./config:/social-network-microservices/config
    networks:
      - dsbnet

  url-shorten-memcached:
    image: memcached
    hostname: url-shorten-memcached
    #    ports:
    #      - 11213:11211
    restart: always
    networks:
      - dsbnet

  url-shorten-mongodb:
    image: mongo:4.4.6
    hostname: url-shorten-mongodb
    #    ports:
    #      - 27021:27017
    restart: always
    networks:
      - dsbnet

  user-service:
    image: deathstarbench/social-network-microservices:latest
    hostname: user-service
    #    ports:
    #      - 10005:9090
    restart: always
    depends_on:
      jaeger-agent:
        condition: service_started
      user-mongodb:
        condition: service_started
    entrypoint: UserService
    volumes:
      - ./config:/social-network-microservices/config
    networks:
      - dsbnet

  user-memcached:
    image: memcached
    hostname: user-memcached
    #    ports:
    #      - 11214:11211
    restart: always
    networks:
      - dsbnet

  user-mongodb:
    image: mongo:4.4.6
    hostname: user-mongodb
    # ports:
    #   - 27023:27017
    restart: always
    networks:
      - dsbnet

  media-service:
    image: deathstarbench/social-network-microservices:latest
    hostname: media-service
    #    ports:
    #      - 10006:9090
    depends_on:
      jaeger-agent:
        condition: service_started
      media-mongodb:
        condition: service_started
    restart: always
    entrypoint: MediaService
    volumes:
      - ./config:/social-network-microservices/config
    networks:
      - dsbnet

  media-memcached:
    image: memcached
    hostname: media-memcached
    #    ports:
    #      - 11215:11211
    restart: always
    networks:
      - dsbnet

  media-mongodb:
    image: mongo:4.4.6
    hostname: media-mongodb
    #    ports:
    #      - 27024:27017
    restart: always
    networks:
      - dsbnet

  text-service:
    image: deathstarbench/social-network-microservices:latest
    hostname: text-service
    #    ports:
    #      - 10007:9090
    restart: always
    depends_on:
      jaeger-agent:
        condition: service_started
    entrypoint: TextService
    volumes:
      - ./config:/social-network-microservices/config
    networks:
      - dsbnet

  unique-id-service:
    image: deathstarbench/social-network-microservices:latest
    hostname: unique-id-service
    #    ports:
    #      - 10008:9090
    restart: always
    depends_on:
      jaeger-agent:
        condition: service_started
    entrypoint: UniqueIdService
    volumes:
      - ./config:/social-network-microservices/config
    networks:
      - dsbnet

  user-mention-service:
    image: deathstarbench/social-network-microservices:latest
    hostname: user-mention-service
    #    ports:
    #      - 10009:9090
    depends_on:
      jaeger-agent:
        condition: service_started
    restart: always
    entrypoint: UserMentionService
    volumes:
      - ./config:/social-network-microservices/config
    networks:
      - dsbnet

  home-timeline-service:
    image: deathstarbench/social-network-microservices:latest
    hostname: home-timeline-service
    #    ports:
    #      - 10010:9090
    depends_on:
      jaeger-agent:
        condition: service_started
    restart: always
    entrypoint: HomeTimelineService
    volumes:
      - ./config:/social-network-microservices/config
    networks:
      - dsbnet

  nginx-thrift:
    image: yg397/openresty-thrift:xenial
    hostname: nginx-thrift
    ports:
      - 8080:8080
    depends_on:
      jaeger-agent:
        condition: service_started
    restart: always
    volumes:
      - ./nginx-web-server/lua-scripts:/usr/local/openresty/nginx/lua-scripts
      - ./nginx-web-server/pages:/usr/local/openresty/nginx/pages
      - ./nginx-web-server/conf/nginx.conf:/usr/local/openresty/nginx/conf/nginx.conf
      - ./nginx-web-server/jaeger-config.json:/usr/local/openresty/nginx/jaeger-config.json
      - ./gen-lua:/gen-lua
      - ./docker/openresty-thrift/lua-thrift:/usr/local/openresty/lualib/thrift
    networks:
      - dsbnet

  media-frontend:
    image: yg397/media-frontend:xenial
    hostname: media-frontend
    ports:
      - 8081:8080
    restart: always
    depends_on:
      jaeger-agent:
        condition: service_started
    volumes:
      - ./media-frontend/lua-scripts:/usr/local/openresty/nginx/lua-scripts
      - ./media-frontend/conf/nginx.conf:/usr/local/openresty/nginx/conf/nginx.conf
    networks:
      - dsbnet

  jaeger-agent:
    image: jaegertracing/all-in-one:1.62.0
    ports:
      #      - 5775:5775/udp
      #      - 6831:6831/udp
      #      - 6832:6832/udp
      #      - 5778:5778
      - 16686:16686
      #      - 14268:14268
      #      - 9411:9411
    restart: always
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
    networks:
      - dsbnet

  # Prometheus service
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml  # Prometheus config file
    restart: always
    networks:
      - dsbnet

  # Grafana service
  grafana:
    image: grafana/grafana
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin  # Set Grafana admin password
    ports:
      - "3000:3000"  # Grafana web UI
    depends_on:
      - prometheus
    restart: always
    networks:
      - dsbnet

networks:
  dsbnet:
    external: true
